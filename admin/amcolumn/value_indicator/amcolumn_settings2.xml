<?xml version="1.0" encoding="UTF-8"?>
<settings>

   <!-- chart config -->
   <data_type>csv</data_type>
   
   <digits_after_decimal>2</digits_after_decimal>
   <legend>
      <enabled>false</enabled>
   </legend>
   <text_size>13</text_size>   
   <background>                                                <!-- BACKGROUND -->
    <color>#F3FFE3</color>                                    <!-- [#FFFFFF] (hex color code) -->
    <alpha>100</alpha>                                        <!-- [0] (0 - 100) use 0 if you are using custom swf or jpg for background -->
    <border_color></border_color>                             <!-- [#000000] (hex color code) -->
    <border_alpha>15</border_alpha>                           <!-- [0] (0 - 100) -->
    <file></file>                                             <!-- [] (filename) swf or jpg file of a background. Do not use progressive jpg file, it will be not visible with flash player 7 -->
                                                              <!-- The chart will look for this file in amcolumn_path folder (amcolumn_path is set in HTML) -->
  </background>
   
   <!-- plugin config -->   
   <plugins>
    <!-- value indicator plugin is suitable for line chart, column chart & xy chart -->
    <plugin file="../amcolumn/plugins/value_indicator.swf" position="above">      <!-- file should be located in "path" folder. position can be "behind" or "above". "behind" means that the plugin will be loaded behind graphs -->
      <chart_type>column</chart_type>                                             <!-- [line] (line / column / xy) this plugin can be used with line or with column chart -->
      <axis></axis>                                                               <!-- [left] (left / right / x / y) if used with line chat use left or right, if used with xy chart, use x or y -->
      <line_color>#000000</line_color>                                            <!-- [#BBBB00] (hex color code) -->
      <line_alpha></line_alpha>                                                   <!-- [100] (0 - 100) -->
      <text_color>#000000</text_color>                                            <!-- [settings.text_color] -->
      <text_size>14</text_size>                                                   <!-- [settings.tex_size] -->
      <precision>2</precision>                                                    <!-- [0] (Number) how many numbers after comma should be shown -->
    </plugin>
  </plugins>
  
      <values>                                                    <!-- VALUES -->
    <category>                                                <!-- category axis -->
      <enabled></enabled>                                     <!-- [true] (true / false) -->
      <frequency></frequency>                                 <!-- [1] (Number) how often values should be placed -->
      <rotate></rotate>                                       <!-- [0] (0 - 90) angle of rotation. If you want to rotate by degree from 1 to 89, you must have font.swf file in fonts folder -->      
      <color></color>                                         <!-- [text_color] (hex color code) -->
      <text_size></text_size>                                 <!-- [text_size] (Number) -->
      <inside></inside>                                       <!-- [false] (true / false) if set to true, axis values will be displayed inside plot area. This setting will not work for values rotated by 1-89 degrees (0 and 90 only) -->          
    </category>
    <value>                                                   <!-- value axis -->
      <enabled></enabled>                                     <!-- [true] (true / false) -->   
      <reverse></reverse>                                     <!-- [false] (true / false) whether to reverse this axis values or not. If set to true, values will start from biggest number and will end with a smallest number -->
      <min>0</min>                                            <!-- [] (Number) minimum value of this axis. If empty, this value will be calculated automatically. -->
      <max></max>                                             <!-- [] (Number) maximum value of this axis. If empty, this value will be calculated automatically -->
      <strict_min_max></strict_min_max>                       <!-- [false] (true / false) by default, if your values are bigger then defined max (or smaller then defined min), max and min is changed so that all the chart would fit to chart area. If you don't want this, set this option to true. -->
      <frequency></frequency>                                 <!-- [1] (Number) how often values should be placed, 1 - near every gridline, 2 - near every second gridline... -->
      <rotate></rotate>                                       <!-- [0] (0 - 90) angle of rotation. If you want to rotate by degree from 1 to 89, you must have font.swf file in fonts folder -->      
      <skip_first></skip_first>                               <!-- [true] (true / false) to skip or not first value -->
      <skip_last></skip_last>                                 <!-- [false] (true / false) to skip or not last value -->
      <color></color>                                         <!-- [text_color] (hex color code) --> 
      <text_size></text_size>                                 <!-- [text_size] (Number) -->
      <unit></unit>                                           <!-- [] (text) -->
      <unit_position></unit_position>                         <!-- [right] (right / left) -->
      <integers_only></integers_only>                         <!-- [false] (true / false) if set to true, values with decimals will be omitted -->
      <inside></inside>                                       <!-- [false] (true / false) if set to true, axis values will be displayed inside plot area. This setting will not work for values rotated by 1-89 degrees (0 and 90 only) -->                   
    </value>
  </values>
  


    
  <legend>                                                    <!-- LEGEND -->
    <enabled></enabled>                                       <!-- [true] (true / false) -->
    <x></x>                                                   <!-- [] (Number) if empty, will be equal to left margin -->
    <y></y>                                                   <!-- [] (Number) if empty, will be below plot area -->
    <width>800</width>                                        <!-- [] (Number) if empty, will be equal to plot area width -->
    <max_columns></max_columns>                               <!-- [] (Number) the maximum number of columns in the legend -->    
    <color></color>                                           <!-- [#FFFFFF] (hex color code) background color -->
    <alpha></alpha>                                           <!-- [0] (0 - 100) background alpha -->
    <border_color></border_color>                             <!-- [#000000] (hex color code) border color -->
    <border_alpha></border_alpha>                             <!-- [0] (0 - 100) border alpha -->
    <text_color></text_color>                                 <!-- [text_color] (hex color code) -->   
    <text_size></text_size>                                   <!-- [text_size] (Number) -->
    <spacing>5</spacing>                                      <!-- [10] (Number) vertical and horizontal gap between legend entries -->
    <margins></margins>                                       <!-- [0] (Number) legend margins (space between legend border and legend entries, recommended to use only if legend border is visible or background color is different from chart area background color) -->
    <reverse_order></reverse_order>                           <!-- [false] (true / false) whether to sort legend entries in a reverse order -->    
    <key>                                                     <!-- KEY (the color box near every legend entry) -->
      <size></size>                                           <!-- [16] (Number) key size-->
      <border_color></border_color>                           <!-- [] (hex color code) leave empty if you don't want to have border-->
    </key>
  </legend>  

 
  
  
  
 
  
  <graphs>                                                    <!-- GRAPHS SETTINGS. These settings can also be specified in data file, as attributes of <graph>, in this case you can delete everything from <graphs> to </graphs> (including) -->
                                                              <!-- It is recommended to have graph settings here if you don't want to mix data with other params -->
                                                              <!-- copy <graph>...</graph> (including) as many times as many graphs you have and edit settings individually -->
                                                              <!-- if graph settings are defined both here and in data file, the ones from data file are used -->
    <graph gid="0">                                           <!-- if you are using XML data file, graph "gid" must match graph "gid" in data file -->
      <type>column</type>                                                      
      <title>满意</title>                                   <!-- [] (graph title) -->
      <color>#FF6600</color>                                  <!-- [] (hex color code)  -->
      <alpha></alpha>                                         <!-- [column.alpha] (0 - 100) -->
      <data_labels>
        <![CDATA[]]>                                          <!-- [column.data_labels (line.data_labels)] ({title} {value} {series} {percents} {start} {difference} {total}) You can format any data label: {title} will be replaced with real title, {value} - with value and so on. You can add your own text or html code too. -->
      </data_labels>      
      <gradient_fill_colors></gradient_fill_colors>          <!-- [] (hex color codes separated by comas) columns can be filled with gradients. Set any number of colors here. Note, that the legend key will be filled with color value, not with gradient. -->
      <balloon_color></balloon_color>                        <!-- [balloon.color] (hex color code) leave empty to use the same color as graph -->
      <balloon_alpha></balloon_alpha>                        <!-- [balloon.alpha] (0 - 100) -->      
      <balloon_text_color></balloon_text_color>              <!-- [balloon.text_color] (hex color code) -->
      <balloon_text>
        <![CDATA[]]>                                         <!-- [column(line).balloon.text] ({title} {value} {series} {description} {percents}) You can format any balloon text: {title} will be replaced with real title, {value} - with value and so on. You can add your own text or html code too. -->
      </balloon_text> 
      <fill_alpha></fill_alpha>                              <!-- [0] (0 - 100) fill alpha (use it if you want to have area chart) -->
      <width></width>                                        <!-- [2] (Number) line width -->
      <bullet></bullet>                                      <!-- [line.bullet] (round, square, round_outlined, square_outlined, filename) -->            
      <bullet_size></bullet_size>                            <!-- [line.bullet_size] (Number) bullet size -->
      <bullet_color></bullet_color>                          <!-- [] (hex color code) bullet color. If not defined, line color is used -->
      <visible_in_legend></visible_in_legend>                <!-- [true] (true / false) whether to show legend entry for this graph or not -->
    </graph>

    <graph gid="1">    
      <title>一般</title>                               
      <color>#FCD202</color>                                   
    </graph>     

    <graph gid="2">                                     
      <title>不满意</title>                               
      <color>#B0DE09</color>                                   
    </graph>     
   
   </graphs>      
</settings>
